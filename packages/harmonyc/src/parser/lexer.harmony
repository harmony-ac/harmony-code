+ empty:
  + "" => ""

+ newline:
  + "\n" => "newline"
  + "\n\n" => "newline newline"
  + "\n\n\n" => "newline newline newline"

+ colon:
  + ":" => ":"
  + " :" => ":"
  + ": " => ":"
  + " : " => ":"
  + "\n:" => "newline :"
  + ":\n" => ": newline"
  + "\n:\n" => "newline : newline"

+ words:
  + "a" => "words"
  + "aa" => "words"
  + "a-" => "words"
  + "a- a" => "words"

+ comment:
  + hash:
    + "#" => ""
    + "#hello" => ""
    + "# hello\n" => "newline"
    + "#hello\nworld" => "newline words"
    + "# hello\nworld\n" => "newline words newline"
    + "#hello\nworld\n#goodbye" => "newline words newline"
    + "hello#`x`" => "words"
  + double slash:
    + "//" => ""
    + "//hello" => ""
    + "// hello\n" => "newline"
    + "//hello\nworld" => "newline words"
    + "// hello\nworld\n" => "newline words newline"
    + "//hello\nworld\n//goodbye" => "newline words newline"
    + "hello//`x`" => "words"

+ response mark:
  + "=>" => "=>"
  + " =>" => "=>"
  + "=> " => "=>"
  + " => " => "=>"
  + with words:
    + "a =>" => "words =>"
    + "a=> " => "words =>"
    + "=>a" => "=> words"
    + "a=>b" => "words => words"
  + with newlines:
  + soft break before "=>":

+ error mark:
  + "!!" => "!!"
  + " !!" => "!!"
  + "!! " => "!!"
  + " !! " => "!!"
  + with words:
    + "a !!" => "words !!"
    + "a!! " => "words !!"
    + "!!a" => "!! words"
    + "a!!b" => "words !! words"
  + with response mark:
    + "!! =>" => "!! =>"
    + "!!=> " => "!! =>"
    + "=>!!" => "=> !!"
    + "=> !!" => "=> !!"


+ bracket:
  + "[" => "["
  + "]" => "]"
  + "[a" => "[ words"
  + "a]" => "words ]"

+ brace:
  + "a{" => "words {"
  + "a {" => "words {"
  + "{" => "{"
  + "}" => "}"
  + "{a}" => "{ words }"
  + "{a;b}" => "{ words ; words }"
  + "{a/b}" => "{ words / words }"
  + "{a ;b;}" => "{ words ; words ; }"
  + "{& a &b}" => "{ & words & words }"

+ text:
  + "a" => "words"
  + "a " => "words"
  + "a b" => "words"
  + "a b c" => "words"
  + "a b\nc d" => "words newline words"
  + "a b\nc\n" => "words newline words newline"
  + "a b\nc \n" => "words newline words newline"

+ ending spaces:
  + "hello " => "words"
  + "hello: " => "words :"
  + "hello: \n" => "words : newline"
  + "hello: \n " => "words : newline"

+ newline:
  + "\n" => "newline"
  + "\n\n"  => "newline newline"
  + "\n\na" => "newline newline words"
  + "a\n"   => "words newline"
  + "a\n\n" => "words newline newline"
  + "a\nb"   => "words newline words"
  + "a\nb\n" => "words newline words newline"

+ list items:
  + "- " => "-"
  + "- a" => "- words"
  + "-a" => "words"

  + "+ " => "+"
  + "+ a" => "+ words"
  + "+a" => "words"
  + "a +" => "words"

+ indentation:
  + invalid indentation:
    + "  " => ""
    + "  a" => "words"
    + "  [x ] " => "[ words ]"
  + multiple dent:
    + "    + " => "+"
    + "    + a" => "+ words"
  + dent with seq:
    + "  - " => "-"
    + "  - a" => "- words"
  + dent with fork:
    + "  + " => "+"
    + "  + a" => "+ words"
  + plus and minus in words:
    + | a "" - b
      => | words double-quote string words
  + empty step:
    + "  + " => "+"
    + "  +" => "+"
    + "  + \n" => "+ newline"
    + "  +\n" => "+ newline"

+ state:
  + "[]" => "[ ]"
  + "[x]" => "[ words ]"
  + "[ x ]" => "[ words ]"

+ colon:
  + "hello:" => "words :"
  + "hello: " => "words :"

+ strings:
  + double-quote string:
    + unclosed:
      + "\"" => "unclosed double-quote string"
      + "\" " => "unclosed double-quote string"
      + "\":" => "unclosed double-quote string"
      + "\"hello" => "unclosed double-quote string"
      + "\"hello, world" => "unclosed double-quote string"
    + empty:
      + "\"\"" => "double-quote string"
    + simple:
      + "\"hello\"" => "double-quote string"

  + backtick string:
    + unclosed:
      + "`" => "unclosed backtick string"
      + "` " => "unclosed backtick string"
      + "`:" => "unclosed backtick string"
      + "`hello" => "unclosed backtick string"
      + "`hello, world" => "unclosed backtick string"
    + empty:
      + "``" => "invalid empty backtick string"
    + simple:
      + "`hello`" => "backtick string"
      + "a`hello`" => "words backtick string"
  + multiline string:
    + "|" => "multiline string"
    + "| " => "multiline string"
    + "|:" => "invalid multiline string mark"
    + "| hello\n|:" => "multiline string newline invalid multiline string mark"
    + "| hello" => "multiline string"
    + "| hello\nworld" => "multiline string newline words"
    + "| hello\n| world\n" => "multiline string newline multiline string newline"
    + "| hello\n| world\n|" => "multiline string newline multiline string newline multiline string"

    + | + | hello
      |   => | hello
      => "+ multiline string newline => multiline string"
    + | + | hello
      |   =>
      |   | hello
      => "+ multiline string newline => newline multiline string"
    + empty line may have no space:
      + | | hello
        | |
        => "multiline string newline multiline string"
      + | | hello
        | |
        | 
        => "multiline string newline multiline string newline"
      + or one space:
        + | | hello
          | | 
          | 
          => "multiline string newline multiline string newline"

+ variables:
  + outside strings:
    + | ${d}
      => "variable"
    + | a${d}
      => "words variable"
    + | a ${d}
      => "words variable"
    + | ${d}a
      => "variable words"
    + | ${d} a
      => "variable words"
    + | =>${hello world}
      => "=> variable"
    + | => ${hello world}
      => "=> variable"

  + inside strings:
    + | "${d}"
      => "double-quote string"
    + | `${d}`
      => "backtick string"
    + | hello "${d}"
      => | words double-quote string
    + | | hello ${d}
      => "multiline string"
    