{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Harmony",
  "patterns": [
    {
      "name": "invalid.indent.harmony",
      "match": "^(?:  )*[ ][+-].*?$"
    },
    {
      "name": "invalid.line.harmony",
      "match": "^(?:  )*(?![+-]( |$)|\\/\\/|=>|[#|])\\S.*?$"
    },
    {
      "name": "comment.line.harmony",
      "match": "(#|\\/\\/).*?(?=\\n|$)"
    },
    {
      "match": "^\\s*(?:([+] )|([-] ))(.*)(:)\\s*$",
      "captures": {
        "1": {
          "name": "keyword.control.fork.harmony"
        },
        "2": {
          "name": "keyword.control.sequence.harmony"
        },
        "3": {
          "name": "markup.heading.harmony"
        },
        "4": {
          "name": "markup.heading.marker.harmony"
        }
      }
    },
    {
      "name": "invalid.whitespace.tab.harmony",
      "match": "\\t"
    },
    {
      "name": "invalid.whitespace.harmony",
      "match": "[\\x00-\\x1f]"
    },
    {
      "name": "keyword.control.fork.harmony",
      "match": "^(  )*[+]( |$)"
    },
    {
      "name": "keyword.sequence.harmony",
      "match": "^(  )*[-]( |$)"
    },
    {
      "name": "markup.heading.marker.harmony",
      "match": ":(?=\\s*(?:\\n|$))"
    },
    {
      "name": "punctuation.section.embedded.state.harmony",
      "match": "\\["
    },
    {
      "name": "punctuation.section.embedded.state.harmony",
      "match": "\\]"
    },
    {
      "name": "keyword.control.error.harmony",
      "match": "!!"
    },
    {
      "name": "keyword.control.response.harmony",
      "match": "=>"
    },
    {
      "name": "string.quoted.double.harmony",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.harmony",
          "match": "\\\\(?:[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4})"
        },
        {
          "name": "invalid.character.escape.harmony",
          "match": "\\\\."
        },
        {
          "name": "invalid.newline.escape.harmony",
          "match": "\\\\\\n"
        },
        {
          "name": "variable.other.normal.harmony",
          "match": "\\$\\{[^\\n}]+\\}"
        },
        {
          "name": "invalid.variable.empty.harmony",
          "match": "\\$\\{\\}"
        },
        {
          "name": "invalid.variable.unclosed.harmony",
          "match": "\\$\\{[^}\\n]*"
        }
      ]
    },
    {
      "name": "string.harmony",
      "match": "\"(?:[^\"\\\\\\n]|\\\\(?:[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*"
    },
    {
      "name": "invalid.string.backtick.empty.harmony",
      "match": "``"
    },
    {
      "name": "constant.language.code.harmony",
      "begin": "`",
      "end": "`",
      "patterns": [
        {
          "name": "invalid.newline.escape.harmony",
          "match": "\\\\\\n"
        },
        {
          "name": "variable.other.normal.harmony",
          "match": "\\$\\{[^`}\\n]+\\}"
        },
        {
          "name": "invalid.variable.empty.harmony",
          "match": "\\$\\{\\}"
        },
        {
          "name": "invalid.variable.unclosed.harmony",
          "match": "\\$\\{[^`}\\n]*"
        }
      ]
    },
    {
      "name": "invalid.string.backtick.harmony",
      "match": "`[^`]*"
    },
    {
      "name": "variable.other.normal.harmony",
      "match": "\\$\\{[^}\\n]+\\}"
    },
    {
      "name": "invalid.variable.harmony",
      "match": "\\$\\{\\}"
    },
    {
      "name": "invalid.variable.harmony",
      "match": "\\$\\{[^}\\n]*"
    },
    {
      "name": "string.unquoted.harmony",
      "match": "\\|(?: .*|(?=\\n|$))"
    },
    {
      "name": "invalid.string.multiline.harmony",
      "match": "\\|[^ \\n]"
    },
    {
      "name": "entity.name.function.call.harmony",
      "match": ".+?(?=[\\[\\]\"`|#]|\\/\\/|\\$\\{|$|=>|!!|:\\s*$)"
    }
  ],
  "scopeName": "source.harmony"
}